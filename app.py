import streamlit as st
import math

st.set_page_config(page_title="Preditor de Sinal", layout="centered")

st.markdown("<h1 style='text-align: center; color: green; font-size: 42px;'>üì° Predi√ß√£o de Sinal</h1>", unsafe_allow_html=True)

# Inicializa dicion√°rio para salvar previs√µes
if "previsoes" not in st.session_state:
    st.session_state.previsoes = {}

# Entradas do usu√°rio
st.divider()
st.markdown("### üî¢ Insira os dados abaixo para calcular o sinal:")

titulo = st.text_input("T√≠tulo da predi√ß√£o")

col1, col2 = st.columns(2)
with col1:
    distancia = st.number_input("Dist√¢ncia (cm)", min_value=0, step=1, format="%d", key="distancia_input")
with col2:
    altura = st.number_input("Altura (cm)", min_value=0, step=1, format="%d", key="altura_input")

potencia_mw = st.selectbox("Pot√™ncia do Roteador (mW)", [100, 300], index=0)

# F√≥rmula de predi√ß√£o (ajuste conforme necessidade real)
def prever_sinal(distancia_cm, altura_cm, potencia_mw):
    if distancia_cm == 0:
        return float('-inf')
    sinal = 10 * math.log10(potencia_mw) - 20 * math.log10(distancia_cm / 100) + 10 * math.log10(altura_cm + 1)
    return sinal

# Bot√£o verde
botao_css = """
<style>
div.stButton > button:first-child {
    background-color: #28a745;
    color: white;
}
</style>
"""
st.markdown(botao_css, unsafe_allow_html=True)

if st.button("Prever sinal"):
    if titulo.strip() == "":
        st.warning("Por favor, insira um t√≠tulo para a predi√ß√£o.")
    else:
        resultado = prever_sinal(distancia, altura, potencia_mw)
        st.success(f"üì∂ Sinal previsto: **{resultado:.3f} dBm**")

        # Salvar previs√£o
        st.session_state.previsoes[titulo] = {
            "Dist√¢ncia (cm)": distancia,
            "Altura (cm)": altura,
            "Pot√™ncia (mW)": potencia_mw,
            "Sinal (dBm)": round(resultado, 3)
        }

        # Resetar campos
        st.session_state.distancia_input = 0
        st.session_state.altura_input = 0

# Consulta de predi√ß√µes anteriores
st.divider()
st.markdown("### üìÅ Consultar predi√ß√µes anteriores")

if st.session_state.previsoes:
    opcoes = list(st.session_state.previsoes.keys())
    selecao = st.selectbox("Selecione uma predi√ß√£o", [""] + opcoes)

    if selecao and selecao in st.session_state.previsoes:
        dados = st.session_state.previsoes[selecao]
        st.markdown("#### Detalhes da predi√ß√£o:")
        st.write(f"**T√≠tulo:** {selecao}")
        st.write(f"**Dist√¢ncia:** {dados['Dist√¢ncia (cm)']} cm")
        st.write(f"**Altura:** {dados['Altura (cm)']} cm")
        st.write(f"**Pot√™ncia:** {dados['Pot√™ncia (mW)']} mW")
        st.write(f"**Sinal (dBm):** {dados['Sinal (dBm)']:.3f} dBm")
else:
    st.info("Nenhuma predi√ß√£o foi realizada ainda.")

st.markdown("---")
st.markdown("<small>Projeto viabilizado pelo CNPq, PIBIC e pelo IFPB</small>", unsafe_allow_html=True)

